info:
  app:
    name: ${spring.application.name}
    version: @version@
server:
  port: 8081
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8080/eureka/
    registry-fetch-interval-seconds: 1 # 表示eureka client间隔多久去拉取服务注册信息，默认为30秒
    instance-info-replication-interval-seconds: 2 # 更新实例信息的变化到Eureka服务端的间隔时间，单位为秒
    initial-instance-info-replication-interval-seconds: 5 # 初始化实例信息到Eureka服务端的间隔时间，单位为秒
  instance:
    lease-expiration-duration-in-seconds: 3 # 服务过期时间，超过这个时间没有接收到心跳EurekaServer就会将这个实例剔除，默认90s
    lease-renewal-interval-in-seconds: 1 # 服务刷新时间，每隔这个时间会主动心跳一次，默认30s

spring:
  application:
    name: zuul
  zipkin:
    # 通过服务名查找zipkin服务
    base-url: http://zipkin-service/
  sleuth:
    sampler:
      probability: 1

# zuul config -> ZuulProperties
zuul:
  routes:
    api-one:
      path: /api-one/**
      serviceId: api-one
    api-two:
      path: /api-two/**
      serviceId: api-two
  retryable: false
#logging:
#  pattern:
#    console: '%d{yyyy-MM-dd HH:mm:ss SSS,GMT+8} [%X{X-B3-TraceId:-},%X{X-B3-ParentSpanId:-},%X{X-B3-SpanId:-},%X{X-B3-Sampled:-}] [%thread] %-5level %logger{50} - %msg%n'
management:
  endpoints:
    web:
      exposure:
        include: '*'
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true
feign:
  hystrix:
    enabled: true
  httpclient:
    enabled: true # 默认为true
ribbon:
  retryable: false
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 0
  ConnectTimeout: 1000
  ReadTimeout: 15000
hystrix:
  command:
    default:
      execution:
        timeout:
          enabled: true
        isolation:
          thread:
            timeoutInMilliseconds: 12000 # 此处超时后不会立刻返回，而是等ribbon.ReadTimeout超时后返回，不过即便此时返回数据也只会返回超时信息